

# Libraries we are going to need
# 74xx DILS 
USE 74xx-us ;
# Memory (inc DIL40)
USE memory ;
# PLCC sockets
USE plcc-socket ;
# Boxed header connectors
USE con-3m;
# Pin headers
USE pinhead;
# resistors, capacitors and inductors
USE rcl;
# Generic ic-packages
USE ic-package;
# SMD caps
USE wuerth-elektronik ;
# regulator
USE holes ;
USE triac ;
USE diode ;
USE switch-dil ;
USE resistor-sil;
#USE Teensy35;
USE atmel;
USE ref-packages;

# # Examples of adding components and placing
# ADD DIL14@ic-package IC1 R270 (10 20);
# ADD DIL14@74xx-us IC2 R270 (25 20);
# ADD DIL20@74xx-us IC3 R270 (40 20);
# ADD 3M44@plcc-socket  IC4 R0 (55 20);
# ADD DIL40@ic-package IC5 R270 (80 40);
# ADD DIL32@ic-package IC6 R270 (80 40);
# # connectors
# ADD PAK100/2500-5-40 CON1 R270 (90 40);
# ADD 2X05 CON2 R0 (20 50);
# 
# # Try adding signals
# SIGNAL VDD IC1 14 IC2 14 IC3 20 IC4 41;
# SIGNAL VSS IC1  7 IC2  7 IC3 10;
# SIGNAL n1  IC1  2 IC1  3 ;
# signal n2  IC2  2 IC4 32 ;
#

# Common settings for manual work
via round ;
change drill .024 in ;
# Netlist m6809_cpu

# Exported from netlister $Revision$
Layer Top;

# Libraries
USE con-3m ;
USE ic-package ;
USE pinhead ;
USE resistor ;
USE switch ;
USE led ;
USE resistor-sil ;

# Component Instances
ADD PAK100/2500-50@con-3m CONN0 R0 (2.0 2.0); # idc_hdr_50w
ADD DIL40@ic-package IC_0 R0 (2.0 2.0); # mc6809
ADD 1X04@pinhead h_0 R0 (2.0 2.0); # hdr1x04
ADD C050-025X075@resistor cap_0 R0 (2.0 2.0); # cap18pf
ADD C050-025X075@resistor cap_1 R0 (2.0 2.0); # cap18pf
ADD 1X03@pinhead xtal_0 R0 (2.0 2.0); # hdr1x03
ADD 1X03@pinhead lk_0 R0 (2.0 2.0); # hdr1x03
ADD 1X03@pinhead lk_1 R0 (2.0 2.0); # hdr1x03
ADD 0204V@resistor res4k7_0 R0 (2.0 2.0); # vresistor
ADD C050-025X075@resistor cap_2 R0 (2.0 2.0); # cap100nf
ADD TL1105@switch switch_0 R0 (2.0 2.0); # TSWITCH
ADD DIL14@ic-package IC_1 R0 (2.0 2.0); # SN7414
ADD LED3MM@led led_0 R0 (2.0 2.0); # LED3MM
ADD SIL9@resistor-sil TSC_PU R0 (2.0 2.0); # r10k_sil9
ADD 0204V@resistor res100r_0 R0 (2.0 2.0); # vresistor
ADD 0204V@resistor res100r_1 R0 (2.0 2.0); # vresistor
ADD 0204V@resistor res100r_2 R0 (2.0 2.0); # vresistor
ADD 0204V@resistor res100r_3 R0 (2.0 2.0); # vresistor
ADD 0204V@resistor res100r_4 R0 (2.0 2.0); # vresistor
ADD 0204V@resistor res100r_5 R0 (2.0 2.0); # vresistor
ADD 0204V@resistor res100r_6 R0 (2.0 2.0); # vresistor
ADD 0204V@resistor res100r_7 R0 (2.0 2.0); # vresistor
ADD C050-025X075@resistor dcap_0 R0 (2.0 2.0); # cap100nf
ADD C050-025X075@resistor dcap_1 R0 (2.0 2.0); # cap100nf
ADD E2,5-5@resistor ecap_0 R0 (2.0 2.0); # cap22uf

# Define net classes
CLASS 0 default ;
CLASS 1 supply ;

# Define net connections
change class 0  ;
SIGNAL E_B_1 IC_1 2 IC_1 3;
SIGNAL A0 CONN0 33 IC_0 8;
SIGNAL RST_1 IC_1 6 IC_1 13;
SIGNAL A1 CONN0 34 IC_0 9;
SIGNAL NMI_B_PU CONN0 15 IC_0 2 TSC_PU 7;
SIGNAL A2 CONN0 35 IC_0 10;
SIGNAL A3 CONN0 36 IC_0 11;
SIGNAL A4 CONN0 37 IC_0 12;
SIGNAL A5 CONN0 38 IC_0 13;
SIGNAL A6 CONN0 39 IC_0 14;
SIGNAL HALT_B_PU CONN0 13 IC_0 40 TSC_PU 4;
SIGNAL A7 CONN0 40 IC_0 15;
SIGNAL A8 CONN0 41 IC_0 16;
SIGNAL A9 CONN0 42 IC_0 17;
SIGNAL RESET_B CONN0 10 IC_0 37 IC_1 12;
SIGNAL A10 CONN0 43 IC_0 18;
SIGNAL A11 CONN0 44 IC_0 19;
SIGNAL A12 CONN0 45 IC_0 20;
SIGNAL A13 CONN0 46 IC_0 21;
SIGNAL A14 CONN0 47 IC_0 22;
SIGNAL A15 CONN0 48 IC_0 23;
SIGNAL Q_B_1 IC_1 10 IC_1 9;
SIGNAL QCLK CONN0 20 lk_1 2;
SIGNAL E_0 IC_0 34 lk_0 1 IC_1 1;
SIGNAL E_2 lk_0 3 IC_1 4;

change class 1  ;
SIGNAL GND CONN0 2 CONN0 3 CONN0 4 CONN0 50 CONN0 17 CONN0 49 IC_0 1 h_0 4 cap_0 2 cap_1 2 cap_2 2 switch_0 3 switch_0 4 IC_1 7 led_0 K dcap_0 2 dcap_1 2 ecap_0 -;

change class 0  ;
SIGNAL ECLK CONN0 1 h_0 3 lk_0 2;
SIGNAL IRQ_B_PU CONN0 16 IC_0 3 TSC_PU 5;
SIGNAL BA IC_0 6 h_0 1;
SIGNAL FIRQ_B_PU CONN0 23 IC_0 4 TSC_PU 6;
SIGNAL Q_0 IC_0 35 lk_1 1 IC_1 11;
SIGNAL Q_2 lk_1 3 IC_1 8;
SIGNAL LED_PU led_0 A TSC_PU 8 TSC_PU 9;
SIGNAL RST_B_0 res4k7_0 2 cap_2 1 switch_0 2 switch_0 1 IC_1 5;
SIGNAL BS IC_0 5 h_0 2;

change class 1  ;
SIGNAL VDD CONN0 5 CONN0 24 IC_0 7 res4k7_0 1 IC_1 14 TSC_PU 1 dcap_0 1 dcap_1 1 ecap_0 +;

change class 0  ;
SIGNAL XTAL_I IC_0 39 cap_0 1 xtal_0 1;
SIGNAL XTAL_O IC_0 38 cap_1 1 xtal_0 3;
SIGNAL BREQ_B_PU CONN0 14 IC_0 33 TSC_PU 3;
SIGNAL DR1 CONN0 26 res100r_1 2;
SIGNAL DR0 CONN0 25 res100r_0 2;
SIGNAL DR3 CONN0 28 res100r_3 2;
SIGNAL DR2 CONN0 27 res100r_2 2;
SIGNAL DR5 CONN0 30 res100r_5 2;
SIGNAL DR4 CONN0 29 res100r_4 2;
SIGNAL DR7 CONN0 32 res100r_7 2;
SIGNAL DR6 CONN0 31 res100r_6 2;
SIGNAL D0 IC_0 31 res100r_0 1;
SIGNAL D1 IC_0 30 res100r_1 1;
SIGNAL D2 IC_0 29 res100r_2 1;
SIGNAL D3 IC_0 28 res100r_3 1;
SIGNAL D4 IC_0 27 res100r_4 1;
SIGNAL D5 IC_0 26 res100r_5 1;
SIGNAL D6 IC_0 25 res100r_6 1;
SIGNAL D7 IC_0 24 res100r_7 1;
SIGNAL WR_B CONN0 18 IC_0 32;
SIGNAL MRDY_PU CONN0 12 IC_0 36 TSC_PU 2;
change Thermals On ;
change Isolate 0.015 ;
change Orphans Off ;
## Maximum Eagle freeware board size is 4.0x3.2" (100x80mm)
DRC load /tmp/design_rules;

## better to work in inches for 0.1 inch pad pitch
Grid default;
Set Wire_Bend 0;
Layer Dimension;
Wire 0  (0 0) (3.9 3.2) (0 0);
Layer Top;

## PCB-Pool/PCB-Train design rule is actually 0.006/0.006 for wires
CLASS 0 signal 0.010 0.010 ;
CLASS 1 supply 0.025 0.010 ;

##ROTATE =R90 C22UF ;
ROTATE =R180 CONN1 ;
##ROTATE =R0 DIPSW0 ;
##ROTATE =R180 sil0 ;
##ROTATE =R270 SRAM0 ;
##ROTATE =R270 SRAM1 ;
##ROTATE =R270 CPLD ;
##ROTATE =R0 C100N_1 ;
##ROTATE =R0 C100N_2 ;
##ROTATE =R180 C100N_3 ;
##ROTATE =R0 C100N_4 ;
##ROTATE =R270 C100N_5 ;
##ROTATE =R0 JTAG ;
##ROTATE =R0 GPIO ;
##ROTATE =R270 TESTPT;

##MOVE C22UF          (3.70 2.40) ;
MOVE CONN1          (1.85 0.25) ;
##MOVE DIPSW0         (3.40 2.90) ;
##MOVE sil0           (3.45 2.65 ) ;
##MOVE SRAM0          (0.6 1.65) ;
##MOVE SRAM1          (1.5 1.65) ;
##MOVE CPLD           (2.65 1.55);
##MOVE C100N_1        (0.8 2.55) ;
##MOVE C100N_2        (1.7 2.55)  ;
##MOVE C100N_3        (2.30 2.30)  ;
##MOVE C100N_4        (2.65 0.8)  ;
##MOVE C100N_5        (3.45 1.70)  ;
##MOVE JTAG           (2.65 2.95)  ;
##MOVE GPIO           (1.20 2.95) ;
##MOVE TESTPT         (3.70 1.2) ;


Layer tPlace ;
CHANGE FONT PROPORTIONAL ;
CHANGE SIZE 0.06
TEXT 'MC6809 CPU Card v1.00' R90 (0.10 0.2) ;
CHANGE SIZE 0.04
TEXT '(C) 2022 Revaldinho, github.com/revaldinho/sys6809'  R90      (0.2 0.2) ;

## WIRE  (0.1 2.91) (0.1 3.05 ) (0.78 3.05 ) (0.78 2.91) (0.1 2.91 ) ;
## TEXT 'PIO0 PIO2 PIO4 PIO6 VDD' R0 (0.13 3.00) ;
## TEXT 'GND  PIO1 PIO3 PIO5 PIO7' R0 (0.13 2.95) ;
## 
## TEXT 'GND  TP4 TP3 TP2 TP1 TP0' R90 (3.60 0.90) ;

## Preroute VDD and VSS rings and some spurs
layer bottom;
wire  0.04;
wire  'VSS' (0.04 0.04) ( 3.86 0.04) (3.86 3.16) (0.04 3.16) (0.04 0.04);
layer top;
wire  0.04;
wire  'VDD' (0.04 0.04) ( 3.86 0.04) (3.86 3.16) (0.04 3.16) (0.04 0.04);

## Autorouter
## AUTO CLK VSS;   ## Route clock and ground first
AUTO load /tmp/autorouter.ctl;
AUTO ;

##  Define power fills top and bottom over whole board area
layer Top ;
polygon VDD 0.015 (0 0) (0 3.2) (3.9 3.2) (3.9 0) (0 0) ;

layer Bottom ;
polygon VSS 0.015 (0 0) (0 3.2) (3.9 3.2) (3.9 0) (0 0) ;


Ratsnest ;  ##  Calculate and display polygons


Window Fit;

